<template>
  <div class="">
    <div class="main">
      <div class="view-main">
        <div class="col-lg-2">
          <b>允许访问的视图</b>
        </div>
        <div class="col-lg-8">
          <form class="">
            <label class="checkbox-inline" v-for="(item, index) in datas">
              <input type="checkbox" :id="item.id" :value="item.id" :checked="item.check==='true'?true:false" @change="getChecked(index)"> {{item.name}}
            </label>
            <label class="checkbox-inline">
              <input type="checkbox" v-model="allChecked" @change="getAllChecked()"> 全选
            </label>
          </form>
        </div>
        <div class="col-lg-2">
          <span>空代表访问没有访问限制</span>
        </div>
        <div class="view-btn-group art-btn-group">
          <btn class="" type="primary" @click="menuSubmit">保存</btn>
          <a href="javascript:void(0)" class="btn btn-default" @click="goBack">返回</a>
        </div>
      </div>

    </div>
  </div>
</template>

<script>
  import { mapGetters } from 'vuex'
  import api from 'src/api'
  export default {
    name: 'view',
    data () {
      return {
        powerId: '',
        datas: [],
        allChecked: false,
        checkedMenus: []
      }
    },
    computed: {
      ...mapGetters({
        menuList: 'menuList'
      })
    },
    mounted () {
      // 客户端请求axios
      // 获取地址栏参数
      this.powerId = this.$route.params.id
      console.log('客户端获取菜单列表结果~~', this.menuList)
      this.datas = this.menuList.menuList
    },
    asyncData ({store, route}) {
      let param = {
        id: route.params.id,
        type: 3
      }
      store.dispatch('isMenuList', param)
    },
    methods: {
      getChecked (index) {
        /**
         * checkbox change事件
         **/
        let vm = this
        vm.datas[index].check = vm.datas[index].check === 'true' ? 'false' : 'true'
        console.log(vm.datas[index].check)
        vm.datas.forEach(function (item) {
          if (item.check === 'false') {
            vm.allChecked = false
          }
        })
      },
      getAllChecked () {
        /**
         * 全选
         **/
        let vm = this
        vm.datas.forEach(function (item) {
          if (vm.allChecked) {
            item.check = 'true'
          } else {
            item.check = 'false'
          }
        })
      },
      menuSubmit () {
        /**
         * 提交
         **/
        let vm = this
        let params = {}
        // params.menuId = ''
        params.id = vm.powerId
        vm.datas.forEach(function (item) {
          if (item.check === 'true') {
            vm.checkedMenus.push(item.id)
          }
        })
        params.menuId = vm.checkedMenus.join(',')
        api.post('/v1/permissiongroup/update', params).then((response) => {
          if (response.code === 200) {
            this.$notify({
              type: 'success',
              content: '修改成功'
            })
            vm.goBack()
          } else {
            this.$notify({
              type: 'danger',
              content: response.message
            })
          }
        }).catch((error) => {
          console.log(error)
        })
      },
      goBack () {
        /**
         * 返回上一页
         **/
        this.$router.go(-1)
      }
    }
  }
</script>

<style lang="less">
  @border: #ddd;
  .main {
    padding: 20px;
  }
  .view-main {
    overflow: hidden;
    border:1px solid @border;
    padding: 15px;
    .view-btn-group {
      clear: both;
    }
  }
</style>
