<template>
  <div class="panel panel-default login-form" @keyup.13="submitForm()">
    <div class="panel-heading">壹仟零壹艺网络科技（北京）有限公司项目管理系统</div>
    <div class="panel-body">
      <form class="form-horizontal">
        <div class="form-group">
          <label class="mod-label pull-left control-label">用户名</label>
          <div class="mod-input pull-left">
            <input type="text" v-model="ruleForm.username" class="form-control" placeholder="用户名（手机号）" auto-complete="off">
          </div>
        </div>
        <div class="form-group">
          <label class="mod-label pull-left control-label">密码</label>
          <div class="mod-input pull-left">
            <input type="password" v-model="ruleForm.password" class="form-control" placeholder="密码" auto-complete="off">
          </div>
        </div>
        <div class="form-group">
          <label class="mod-label pull-left control-label"></label>
          <div class="mod-input pull-left">
            <label>
              <input type="checkbox" value="remember-me"> 记住密码
            </label>
            <btn class="pull-right" type="link" to="/user/register">注册</btn>
          </div>
        </div>
        <div class="form-group art-btn-group">
          <label class="mod-label pull-left control-label"></label>
          <div class="mod-input pull-left">
            <btn block type="primary" @click="submits">
              <template v-if="!loading">{{submit}}</template>
              <i v-if="loading" class="fa fa-circle-o-notch fa-spin"></i>
            </btn>
          </div>
        </div>
      </form>
    </div>
  </div>
</template>
<script>
  import api from 'src/api'
  // import lib from 'assets/js/Lib'
  import cookies from 'js-cookie'

  export default {
    name: 'Login',
    title () {
      return '登录'
    },
    data () {
      return {
        loading: false,
        submit: '登 录',
        ruleForm: {
          username: '13691425060',
          password: '123456'
        }
      }
    },
    created () {
      // 客户端 服务端同时请求axios
    },
    mounted () {
      // 客户端请求axios
    },
    asyncData ({store}) {
      // return store.dispatch(`doLogins`)
    },
    methods: {
      submits () {
        /**
         * 登录
         */
        const param = this.ruleForm
        this.loading = true
        api.post('/login', param).then((response) => {
          this.loading = false
          console.log(1, response)
          // if (response) return
          if (response.code === 200) {
            // lib.sets('USER', response.data)
            this.$store.dispatch(`doLogins`, param)
            cookies.set('user_db', {
              id: response.data.id,
              companyId: response.data.companyId
            })
            if (response.data.companyId) {
              this.submit = '登录成功，跳转中...'

              this.notify('success', '登录成功')

              this.submit = '登 录'
              this.$router.replace({path: '/'})
            } else {
              this.submit = '登录中...'
              this.$confirm({
                title: '提示',
                okText: '确定',
                cancelText: '取消',
                content: '您还未绑定企业，是否立即创建企业？'
              }).then(() => {
                this.submit = '登 录'
                this.$router.replace({path: '/user/addCompany'})
              }).catch(() => {
                this.submit = '登 录'
              })
            }
          } else {
            this.submit = '登 录'
            this.notify('danger', response.message)
          }
        }).catch((error) => {
          this.loading = false
          this.notify('danger', error.message)
          console.log(2, error)
        })
      },
      submitForm () {
        /**
         * 登录验证
         */
        this.submit = '登录中...'
        const usernameVal = this.ruleForm.username.trim()
        const passwordVal = this.ruleForm.password.trim()
        if (!usernameVal) {
          this.notify('danger', '请输入用户名')
          return false
        } else if (!(/^1[34578]\d{9}$/.test(usernameVal))) {
          this.notify('danger', '请输入正确用户名（手机号）!')
          return false
        }
        if (!passwordVal) {
          this.notify('danger', '请输入密码!')
          return false
        }
        this.submits()
      },
      notify (type, content) {
        /**
         * 封装一个弹出消息
         * param {String} type 类型
         * param {String} content 内容
         */
        this.$notify({type, content, dismissible: false, duration: 1000})
      }
    }
  }

</script>
