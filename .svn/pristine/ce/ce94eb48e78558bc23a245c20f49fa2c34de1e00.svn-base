import qs from 'qs'
import axios from 'axios'
import config from './config'

axios.defaults.timeout = config.timeout
axios.defaults.baseURL = config.baseurl

axios.interceptors.response.use((res) => {
  if (res.status >= 200 && res.status < 300) {
    return res
  }
  return Promise.reject(res)
}, (error) => {
  // 网络异常
  return Promise.reject({ message: '网络异常，请刷新重试', error })
})

axios.interceptors.request.use(config => {
  return config
})

export default {
  get (url, params = {}) {
    return new Promise((resolve, reject) => {
      axios({
        url,
        params,
        headers: {
          'X-Requested-With': 'XMLHttpRequest',
          'Content-Type': 'application/x-www-form-urlencoded'
        },
        method: 'get'
      }).then(res => {
        resolve(res.data)
      }).catch(error => {
        reject(error)
      })
    })
  },
  post (url, params = {}) {
    return new Promise((resolve, reject) => {
      axios({
        url,
        data: qs.stringify(params),
        method: 'post',
        headers: {
          'X-Requested-With': 'XMLHttpRequest',
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      }).then(res => {
        resolve(res.data)
      }).catch(error => {
        reject(error)
      })
    })
  }
}
