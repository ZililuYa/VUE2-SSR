<template>
  <div class="login-container" @keyup.13="submitForm()">
    <img :src="bg" alt="" class="login-container-bg">
    <div class="panel panel-default form-company">
      <div class="panel-heading">壹仟零壹艺网络科技（北京）有限公司项目管理系统</div>
      <div class="panel-body">
        <form class="form-horizontal">
          <div class="form-group">
            <label for="name" class="col-sm-3 control-label">用户名</label>
            <div class="col-sm-9">
              <input type="text" v-model="ruleForm.username" class="form-control" placeholder="用户名（手机号）" auto-complete="off">
            </div>
          </div>
          <div class="form-group">
            <label for="name" class="col-sm-3 control-label">密码</label>
            <div class="col-sm-9">
              <input type="password" v-model="ruleForm.password" class="form-control" placeholder="密码" auto-complete="off">
            </div>
          </div>
          <div class="form-group">
            <label for="name" class="col-sm-3 control-label"></label>
            <div class="col-sm-9">
              <input type="checkbox" value="remember-me"> 记住密码
            </div>
          </div>
          <div class="form-group art-btn-group">
            <btn class="" type="primary" @click="submits">{{submit.text}}</btn>
          </div>
        </form>
      </div>
    </div>
  </div>
</template>
<script>
import api from 'src/api'
import lib from 'assets/js/Lib'
import bg from 'assets/images/login_bg.jpg'
// import { mapActions } from 'vuex'
export default {
  name: 'Login',
  data() {
    return {
      bg,
      submit: {
        loading: false,
        text: '登 录'
      },
      ruleForm: {
        username: '13691425060',
        password: '123456'
      }
    }
  },
  created() {
    // 客户端 服务端同时请求axios
  },
  mounted() {
    // 客户端请求axios
  },
  asyncData({ store }) {
    // return store.dispatch(`doLogins`)
  },
  methods: {
    submits() {
      /**
       * 登录
       */
      const param = this.ruleForm
      api.post('/login', param).then((response) => {
        if (response.code === 200) {
          lib.sets('USER', response.data)
          if (response.data.companyId) {
            this.submit.text = '登录成功，跳转中...'

            this.notify('success', '登录成功')

            setTimeout(() => {
              this.submit.text = '登 录'
              this.$router.replace({ path: '/' })
            }, 2000)
          } else {
            this.submit.text = '登录中...'
            this.$confirm({
              title: '提示',
              okText: '确定',
              cancelText: '取消',
              content: '您还未绑定企业，是否立即创建企业？'
            }).then(() => {
              this.submit.text = '登 录'
              this.$router.replace({ path: '/addCompany' })
            }).catch(() => {
              this.submit.text = '登 录'
            })
          }
        } else {
          this.submit.text = '登 录'
          this.notify('danger', response.message)
        }
      }).catch((error) => {
        console.log(error)
      })
    },
    submitForm() {
      /**
       * 登录验证
       */
      this.submit.text = '登录中...'
      const usernameVal = this.ruleForm.username.trim()
      const passwordVal = this.ruleForm.password.trim()
      if (!usernameVal) {
        this.notify('danger', '请输入用户名')
        return false
      } else if (!(/^1[34578]\d{9}$/.test(usernameVal))) {
        this.notify('danger', '请输入正确用户名（手机号）!')
        return false
      }
      if (!passwordVal) {
        this.notify('danger', '请输入密码!')
        return false
      }
      this.submits()
    },
    notify(type, content) {
      /**
       * 封装一个弹出消息
       * param {String} type 类型
       * param {String} content 内容
       */
      this.$notify({ type, content })
    }
  }
}

</script>
<style>
html {
  height: 100%;
}

body>#app {
  width: 100%;
  height: 100%;
}

.login-container {
  width: 100%;
  height: 100%;
  padding-top: 100px;
}

.login-container-bg {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
}

.form-signin {
  max-width: 330px;
  padding: 100px 15px 0 15px;
  margin: 0 auto;
}

.form-signin .form-signin-heading,
.form-signin .checkbox {
  margin-bottom: 10px;
}

.form-signin .checkbox {
  font-weight: normal;
  color: #fff;
}

.form-signin .form-control {
  position: relative;
  height: auto;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  padding: 10px;
  font-size: 16px;
  margin-bottom: 10px;
}

.form-signin .form-control:focus {
  z-index: 2;
}

.form-signin input[type="text"] {
  /*margin-bottom: -1px;*/
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}

.form-signin input[type="password"] {
  /*margin-bottom: 10px;*/
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

</style>
