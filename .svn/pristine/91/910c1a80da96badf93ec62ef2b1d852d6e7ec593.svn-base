<template>
  <div>
    <div class="main">
      <div class="panel panel-default">
        <div class="panel-heading">
          <span class="panel-heading-txt">最新动态</span>
          <a href="/organization/log" class="pull-right">更多<span class="glyphicon glyphicon-menu-right"></span></a>
        </div>
        <dataTable :data="logData.data" :columns="myLog"></dataTable>
      </div>
      <div class="panel panel-default">
        <div class="panel-heading">
          <span class="panel-heading-txt">进行中的项目</span>
          <a href="/project/index" class="pull-right">更多<span class="glyphicon glyphicon-menu-right"></span></a>
        </div>
        <dataTable :data="projectData.data" :columns="goingPro"></dataTable>
      </div>
      <div class="panel panel-default">
        <div class="panel-heading">
          <span class="panel-heading-txt">指派给我的任务</span>
          <a href="/home/myTask" class="pull-right">更多<span class="glyphicon glyphicon-menu-right"></span></a>
        </div>
        <dataTable :data="taskData.data" :columns="myTask"></dataTable>
      </div>
    </div>
  </div>
</template>
<script>
  import { mapGetters, mapActions } from 'vuex'
  import dataTable from 'components/table/table.vue'
  export default {
    name: 'index',
    title () {
      return '首页'
    },
    data () {
      return {
        myLog: [{
          text: '日期',
          key: 'createTime',
          align: 'center',
          width: '20%',
          render: (h, params) => {
            let date = new Date(params.createTime)
            let y = 1900 + date.getYear()
            let m = '0' + (date.getMonth() + 1)
            let d = '0' + date.getDate()
            let dates = y + '-' + m.substring(m.length - 2, m.length) + '-' + d.substring(d.length - 2, d.length)
            return dates
          }
        }, {
          text: '操作者',
          key: 'memberName',
          width: '20%'
        }, {
          text: '动作',
          key: 'action',
          width: '20%'
        }, {
          text: '对象名称',
          key: 'content',
          width: '40%'
        }],
        goingPro: [{
          text: '项目名称',
          key: 'name',
          align: 'center',
          width: 300,
          render: function (h, row) {
            return h('a', {
              attrs: {
                href: 'javascript:;'
              },
              on: {
                click: () => {
                  window.sessionStorage.setItem('pid', row.id)
                  window.sessionStorage.setItem('pname', row.name)
                  window.location.href = '/project/survey/' + row.id
                }
              }
            }, row.name)
          }
        }, {
          text: '项目代号',
          key: 'code'
        }, {
          text: '项目负责人',
          key: 'chargeName'
        }, {
          text: '结束日期',
          key: 'endTime',
          render: function (h, row) {
            return h('span', {}, new Date(row.endTime).Format('yyyy-MM-dd'))
          }
        }, {
          text: '状态',
          key: 'status',
          render: (h, row) => {
            if (row.status === 1) {
              return '未开始'
            } else if (row.status === 2) {
              return '进行中'
            } else if (row.status === 3) {
              return '已完成'
            } else if (row.status === 4) {
              return '已挂起'
            } else if (row.status === 5) {
              return '已取消'
            } else if (row.status === 6) {
              return '已关闭 '
            }
          }
        }, {
          text: '总预计',
          key: 'totalPlan'
        }, {
          text: '总耗时',
          key: 'totalUse'
        }, {
          text: '总剩余',
          key: 'totalLeft'
        }, {
          text: '进度',
          render: function (h, row) {
            return h('progress-bar', {
              props: {
                value: parseInt(row.percent)
              },
              style: {
                marginBottom: '0px'
              },
              attrs: {
                label: true
              }
            })
          }
        }],
        myTask: [{
          text: 'ID',
          key: 'id',
          align: 'center'
        }, {
          text: '任务名称',
          key: 'name',
          width: 300,
          render: function (h, row) {
            return h('a', {
              attrs: {
                href: 'javascript:;'
              },
              on: {
                click: () => {
                  window.sessionStorage.setItem('pid', row.id)
                  window.sessionStorage.setItem('pname', row.name)
                  window.location.href = '/project/survey/' + row.id
                }
              }
            }, row.name)
          }
        }, {
          text: '预',
          key: 'planTime'
        }, {
          text: '截止日期',
          key: 'endTime',
          render: function (h, row) {
            return h('span', {}, new Date(row.endTime).Format('yyyy-MM-dd'))
          }
        }, {
          text: '状态',
          key: 'status',
          render: function (h, row) {
            if (row.status === 1) {
              return '未开始'
            } else if (row.status === 2) {
              return '进行中'
            } else if (row.status === 3) {
              return '已完成'
            } else if (row.status === 4) {
              return '已挂起'
            } else if (row.status === 5) {
              return '已取消'
            } else if (row.status === 6) {
              return '已关闭 '
            }
          }
        }]
      }
    },
    computed: {
      ...mapGetters({
        projectData: 'projectState',
        logData: 'logList',
        taskData: 'projectTaskList'
      })
    },
    mounted () {
      console.log('服务端接收到的~~进行中的项目~~数据：', this.projectData)
      console.log('服务端接收到的~~动态~~数据：', this.logData)
      console.log('服务端接收到的~~任务~~数据：', this.taskData)
    },
    components: {dataTable},
    asyncData ({store}) {
      return Promise.all([store.dispatch('isProjectState', {starting: 1}), store.dispatch('isLog'), store.dispatch('isProjectTask', {flag: 1})])
    },
    methods: {
      ...mapActions([
        'isProjectState',
        'isProjectTask',
        'isLog'
      ])
    }
  }
</script>