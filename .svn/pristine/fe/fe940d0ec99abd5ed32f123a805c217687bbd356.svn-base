<template>
  <div class="">
    <div class="featurebar">
      <ul class="ul">
        <li :class="i.value === param.status ? 'active' : ''" v-for="i in statusList" @click="param.status=i.id,tableChange()"><a href="javascript:;">{{i.text}}</a></li>
        <li><a href="javascript:;" @click="search=!search"><i class="fa fa-search"></i> 搜索</a></li>
        <li class="fr">
          <a href="javascript:;" @click="add"><i class="fa fa-plus"></i> 建任务</a>
        </li>
      </ul>
    </div>
    <div class="search-main" v-show="search">
      <form class="form-inline" action="javascript:;" @submit="submitEvent">
        <div class="form-group input-group-sm">
          <input type="text" class="form-control" v-model="param.name" placeholder="请输入任务名称">
        </div>
        <button type="button" class="btn btn-primary btn-sm" @click="isProjectTask(param)">搜索</button>

        <div class="fr">
          <a href="javascript:;" class="close" @click="search=!search"><i class="fa fa-close"></i></a>
        </div>
      </form>
    </div>
    <div class="main">
      <dataTable :data="state.data" :page="state.page" @pageChange="tableChange" :columns="columns"></dataTable>
    </div>
    <taskAssign v-model="taskAssignShow" :typeList="taskMan" :data="taskData" @success="tableChange"></taskAssign>
    <taskFinish v-model="taskFinishShow" :typeList="taskMan" :data="taskData" @success="tableChange"></taskFinish>
    <taskAction v-model="taskActionShow" :data="taskData" @success="tableChange"></taskAction>
  </div>
</template>

<script>
  import { mapGetters, mapActions } from 'vuex'
  import dataTable from 'components/table/table.vue'
  import taskAssign from './taskAssign.vue'
  import taskAction from './taskAction.vue'
  import taskFinish from './taskFinish.vue'
  import api from 'src/api'

  export default {
    components: {dataTable, taskAssign, taskAction, taskFinish},
    data () {
      return {
        taskData: {},
        statusList: this.$taskStatus,
        taskAssignShow: false,
        taskActionShow: false,
        taskFinishShow: false,
        taskAssignTitle: '指派',
        search: false,
        tool: [{
          text: '删除',
          click: function (data) {
            console.log('要批量删除的数据', data)
          }
        }],
        columns: [{
          type: 'selection'
        }, {
          text: '任务名称',
          width: 300,
          render: (h, row) => {
            return h('a', {
              attrs: {
                href: 'javascript:;'
              },
              on: {
                click: () => {
                  this.$router.push('/project/taskDetails/' + this.$route.params.id + '-' + row.id)
                }
              }
            }, row.name)
          }
        }, {
          text: '状态',
          key: 'status',
          render: (h, row) => {
            let cla = {}
            cla['status-color' + row.status] = true
            let status = ''
            for (let i of this.statusList) {
              if (i.value === row.status) status = i.text
            }
            return h('span', {
              'class': cla
            }, status)
          }
        }, {
          text: '截止',
          render: (h, row) => {
            return h('span', {}, new Date(row.endTime).Format('yyyy-MM-dd'))
          }
        }, {
          text: '指派给',
          key: 'memberName'
        }, {
          text: '完成者',
          key: 'finishName'
        }, {
          text: '预',
          align: 'center',
          key: 'planTime',
          width: 35
        }, {
          text: '耗',
          align: 'center',
          key: 'useTime',
          width: 35
        }, {
          text: '剩',
          align: 'center',
          key: 'leftTime',
          width: 35
        }, {
          text: '操作',
          width: 144,
          align: 'center',
          render: (h, row) => {
            let arr = []
            arr.push(h('i', {
              attrs: {
                title: '指派'
              },
              'class': {
                fa: true,
                'fa-hand-o-right': true
              },
              on: {
                click: () => {
                  this.taskData = row
                  this.taskAssignShow = true
                }
              }
            }))
            arr.push(h('i', {
              attrs: {
                title: '开始'
              },
              'class': {
                fa: true,
                'fa-play': true,
                disabled: row.status !== 1
              },
              on: {
                click: () => {
                  if (row.status !== 1) return
                  this.taskData = row
                  this.taskActionShow = true
                }
              }
            }))
            arr.push(h('i', {
              attrs: {
                title: '工时'
              },
              'class': {
                fa: true,
                'fa-clock-o': true
              }
            }))
            arr.push(h('i', {
              attrs: {
                title: '完成'
              },
              'class': {
                fa: true,
                'fa-check-circle': true,
                disabled: row.status !== 2
              },
              on: {
                click: () => {
                  if (row.status !== 2) return
                  this.taskData = row
                  this.taskFinishShow = true
                }
              }
            }))
            arr.push(h('i', {
              attrs: {
                title: '关闭'
              },
              'class': {
                fa: true,
                'fa-close': true,
                disabled: row.status === 6
              },
              on: {
                click: () => {
                  if (row.status === 6) return
                  this.$confirm({
                    title: '系统提示',
                    content: '确定关闭吗？'
                  })
                    .then(() => {
                      api.post('/task/close', {taskId: row.id, name: row.name}).then((response) => {
                        this.$notify(response.message)
                        this.tableChange()
                      })
                    })
                    .catch(() => {
                    })
                }
              }
            }))
            arr.push(h('i', {
              attrs: {
                title: '编辑'
              },
              'class': {
                fa: true,
                'fa-edit': true
              },
              on: {
                click: () => {
                  this.$router.push('/project/taskEdit/' + this.$route.params.id + '-' + row.id)
                }
              }
            }))
            return h('div', arr)
          }
        }],
        param: {
          pageSize: 20,
          pageIndex: 1,
          name: '',
          projectId: this.$route.params.id,
          status: ''
        }
      }
    },
    computed: {
      ...mapGetters({
        state: 'projectTaskList',
        taskMan: 'projectTaskMan'
      })
    },
    mounted () {
      console.log('服务端接收到的数据：', this.taskMan)
    },
    asyncData ({store, route}) {
      return Promise.all([store.dispatch('isProjectTaskMan', {projectId: route.params.id}), store.dispatch('isProjectTask', {projectId: route.params.id, pageSize: 20})])
    },
    methods: {
      ...mapActions([
        'isProjectTask'
      ]),
      submitEvent () {
        this.tableChange()
        return false
      },
      add () {
        this.$router.push(this.$route.path + '/add')
      },
      tableChange (data) {
        if (data) this.param.pageIndex = data
        this.isProjectTask(this.param)
      }
    }
  }
</script>

<style lang="less">
  .close {
    line-height: 30px;
    font-size: 20px;
  }

  .search-main {
    border-bottom: 1px solid #ddd;
    padding: 10px 20px;
  }

  .row-table {
    display: table;
    width: 100%;
  }

  .col-side, .col-main {
    display: table-cell;
  }

  .col-side {
    width: 350px;
    padding-left: 10px;
  }

  .col-main {
    padding-right: 10px;
  }

  .fieldset {
    margin-bottom: 15px;
    border: 1px solid #e5e5e5;
    padding: 10px 15px 15px;
    legend {
      width: auto;
      margin: 0 0 0 -5px;
      font-size: 13px;
      font-weight: bold;
      border-bottom: 0;
      padding: 0 5px;
    }
    .content {
    }
  }

  .table .pagination {
    margin: 0 !important;
    float: right;
  }

  .totalPage {
    padding-right: 20px;
    font-size: 12px;
    line-height: 30px;
  }

  .check {
    vertical-align: middle;
    margin: -2px 0 0 0 !important;
  }

  .col-main .tool-a a {
    padding: 0 5px;
  }

  .table i[title] {
    font-size: 18px;
    margin: 0 3px;
    cursor: pointer;
  }

  .table i.disabled {
    color: #ccc;
    cursor: not-allowed !important;
  }

  .status-color1 {
    color: #ccc;
  }

  .status-color2 {
    color: #cc2b21;
  }

  .status-color3 {
    color: #229f24;
  }
</style>
