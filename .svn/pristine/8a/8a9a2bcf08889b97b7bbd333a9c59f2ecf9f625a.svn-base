<template>
  <div class="login-container" @keyup.13="submitForm()">
    <div class="login-container-bg"></div>
    <div class="panel panel-default form-company form-signin">
      <div class="panel-heading">用户注册</div>
      <div class="panel-body">
        <form class="form-horizontal">
          <div class="form-group">
            <div class="col-lg-12">
              <input type="text" v-model="ruleForm.username" class="form-control" placeholder="请输入手机号">
            </div>
          </div>
          <div class="form-group">
            <div class="col-lg-12">
              <input type="password" v-model="ruleForm.password" class="form-control" placeholder="请输入密码">
            </div>
          </div>
          <div class="form-group">
            <div class="col-lg-12">
              <input type="password" v-model="ruleForm.password" class="form-control" placeholder="确认密码">
            </div>
          </div>
          <div class="form-group">
            <div class="col-lg-7">
              <input type="password" v-model="ruleForm.password" class="form-control" placeholder="请输入验证码">
            </div>
            <div class="col-lg-5">
              <btn type="primary" @click="submits">发送验证码</btn>
            </div>
          </div>
          <div class="form-group art-btn-group">
            <btn type="primary" @click="submits">立即注册</btn>
          </div>
        </form>
      </div>
    </div>
  </div>
</template>
<script>
import api from 'src/api'
// import lib from 'assets/js/Lib'
// import { mapActions } from 'vuex'
import cookies from 'js-cookie'
export default {
  name: 'Login',
  data() {
    return {
      submit: {
        loading: false,
        text: '登 录'
      },
      ruleForm: {
        username: '13691425060',
        password: '123456'
      }
    }
  },
  created() {
    // 客户端 服务端同时请求axios
  },
  mounted() {
    // 客户端请求axios
  },
  asyncData({ store }) {
    // return store.dispatch(`doLogins`)
  },
  methods: {
    submits() {
      /**
       * 登录
       */
      const param = this.ruleForm
      api.post('/login', param).then((response) => {
        console.log(response)
        // if (response) return
        if (response.code === 200) {
          // lib.sets('USER', response.data)
          this.$store.dispatch(`doLogins`, param)
          cookies.set('user_db', {
            id: response.data.id,
            companyId: response.data.companyId
          })
          if (response.data.companyId) {
            this.submit.text = '登录成功，跳转中...'

            this.notify('success', '登录成功')

            this.submit.text = '登 录'
            this.$router.replace({ path: '/' })
          } else {
            this.submit.text = '登录中...'
            this.$confirm({
              title: '提示',
              okText: '确定',
              cancelText: '取消',
              content: '您还未绑定企业，是否立即创建企业？'
            }).then(() => {
              this.submit.text = '登 录'
              this.$router.replace({ path: '/addCompany' })
            }).catch(() => {
              this.submit.text = '登 录'
            })
          }
        } else {
          this.submit.text = '登 录'
          this.notify('danger', response.message)
        }
      }).catch((error) => {
        console.log(error)
      })
    },
    submitForm() {
      /**
       * 登录验证
       */
      this.submit.text = '登录中...'
      const usernameVal = this.ruleForm.username.trim()
      const passwordVal = this.ruleForm.password.trim()
      if (!usernameVal) {
        this.notify('danger', '请输入用户名')
        return false
      } else if (!(/^1[34578]\d{9}$/.test(usernameVal))) {
        this.notify('danger', '请输入正确用户名（手机号）!')
        return false
      }
      if (!passwordVal) {
        this.notify('danger', '请输入密码!')
        return false
      }
      this.submits()
    },
    notify(type, content) {
      /**
       * 封装一个弹出消息
       * param {String} type 类型
       * param {String} content 内容
       */
      this.$notify({ type, content, dismissible: false, duration: 1000 })
    }
  }
}

</script>
<style lang="less">
.login-container {
  .mod-input {
    margin: 0 auto;
  }
}
</style>
